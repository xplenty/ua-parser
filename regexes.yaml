user_agent_parsers:
  #### SPECIAL CASES TOP ####

  # must go before Firefox to catch SeaMonkey/Camino
  - regex: '(SeaMonkey|Camino)/(\d+)\.(\d+)\.?([ab]?\d+[a-z]*)'

  # Firefox
  - regex: '(Pale[Mm]oon)/(\d+)\.(\d+)\.?(\d+)?'
    family_replacement: 'Pale Moon (Firefox Variant)'
  - regex: '(Fennec)/(\d+)\.(\d+)\.?([ab]?\d+[a-z]*)'
    family_replacement: 'Firefox Mobile'
  - regex: '(Fennec)/(\d+)\.(\d+)(pre)'
    family_replacement: 'Firefox Mobile'
  - regex: '(Fennec)/(\d+)\.(\d+)'
    family_replacement: 'Firefox Mobile'
  - regex: 'Mobile.*(Firefox)/(\d+)\.(\d+)'
    family_replacement: 'Firefox Mobile'
  - regex: '(Namoroka|Shiretoko|Minefield)/(\d+)\.(\d+)\.(\d+(?:pre)?)'
    family_replacement: 'Firefox ($1)'
  - regex: '(Firefox)/(\d+)\.(\d+)(a\d+[a-z]*)'
    family_replacement: 'Firefox Alpha'
  - regex: '(Firefox)/(\d+)\.(\d+)(b\d+[a-z]*)'
    family_replacement: 'Firefox Beta'
  - regex: '(Firefox)-(?:\d+\.\d+)?/(\d+)\.(\d+)(a\d+[a-z]*)'
    family_replacement: 'Firefox Alpha'
  - regex: '(Firefox)-(?:\d+\.\d+)?/(\d+)\.(\d+)(b\d+[a-z]*)'
    family_replacement: 'Firefox Beta'
  - regex: '(Namoroka|Shiretoko|Minefield)/(\d+)\.(\d+)([ab]\d+[a-z]*)?'
    family_replacement: 'Firefox ($1)'
  - regex: '(Firefox).*Tablet browser (\d+)\.(\d+)\.(\d+)'
    family_replacement: 'MicroB'
  - regex: '(MozillaDeveloperPreview)/(\d+)\.(\d+)([ab]\d+[a-z]*)?'

  # e.g.: Flock/2.0b2
  - regex: '(Flock)/(\d+)\.(\d+)(b\d+?)'

  # RockMelt
  - regex: '(RockMelt)/(\d+)\.(\d+)\.(\d+)'

  # e.g.: Fennec/0.9pre
  - regex: '(Navigator)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Netscape'

  - regex: '(Navigator)/(\d+)\.(\d+)([ab]\d+)'
    family_replacement: 'Netscape'

  - regex: '(Netscape6)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Netscape'

  - regex: '(MyIBrow)/(\d+)\.(\d+)'
    family_replacement: 'My Internet Browser'

  # Opera will stop at 9.80 and hide the real version in the Version string.
  # see: http://dev.opera.com/articles/view/opera-ua-string-changes/
  - regex: '(Opera Tablet).*Version/(\d+)\.(\d+)(?:\.(\d+))?'
  - regex: '(Opera)/.+Opera Mobi.+Version/(\d+)\.(\d+)'
    family_replacement: 'Opera Mobile'
  - regex: 'Opera Mobi'
    family_replacement: 'Opera Mobile'
  - regex: '(Opera Mini)/(\d+)\.(\d+)'
  - regex: '(Opera Mini)/att/(\d+)\.(\d+)'
  - regex: '(Opera)/9.80.*Version/(\d+)\.(\d+)(?:\.(\d+))?'

  # Opera 14 for Android uses a WebKit render engine.
  - regex: '(?:Mobile Safari).*(OPR)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Opera Mobile'

  # Opera 15 for Desktop is similar to Chrome but includes an "OPR" Version string.
  - regex: '(?:Chrome).*(OPR)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Opera'

  # Palm WebOS looks a lot like Safari.
  - regex: '(hpw|web)OS/(\d+)\.(\d+)(?:\.(\d+))?'
    family_replacement: 'webOS Browser'

  # LuaKit has no version info.
  # http://luakit.org/projects/luakit/
  - regex: '(luakit)'
    family_replacement: 'LuaKit'
    
  # Snowshoe
  - regex: '(Snowshoe)/(\d+)\.(\d+).(\d+)'

  # Lightning (for Thunderbird)
  # http://www.mozilla.org/projects/calendar/lightning/
  - regex: '(Lightning)/(\d+)\.(\d+)([ab]?\d+[a-z]*)'

  # Swiftfox
  - regex: '(Firefox)/(\d+)\.(\d+)\.(\d+(?:pre)?) \(Swiftfox\)'
    family_replacement: 'Swiftfox'
  - regex: '(Firefox)/(\d+)\.(\d+)([ab]\d+[a-z]*)? \(Swiftfox\)'
    family_replacement: 'Swiftfox'

  # Rekonq
  - regex: '(rekonq)/(\d+)\.(\d+)\.?(\d+)? Safari'
    family_replacement: 'Rekonq'
  - regex: 'rekonq'
    family_replacement: 'Rekonq'

  # Conkeror lowercase/uppercase
  # http://conkeror.org/
  - regex: '(conkeror|Conkeror)/(\d+)\.(\d+)\.?(\d+)?'
    family_replacement: 'Conkeror'

  # catches lower case konqueror
  - regex: '(konqueror)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Konqueror'

  - regex: '(WeTab)-Browser'

  - regex: '(Comodo_Dragon)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Comodo Dragon'

  # Bots
  - regex: '(YottaaMonitor|BrowserMob|HttpMonitor|YandexBot|Slurp|BingPreview|PagePeeker|ThumbShotsBot|WebThumb|URL2PNG|ZooShot|GomezA|Catchpoint bot|Willow Internet Crawler|Google SketchUp|Read%20Later)'

  - regex: '(Symphony) (\d+).(\d+)'

  - regex: '(Minimo)'

  # Chrome Mobile
  - regex: '(CrMo)/(\d+)\.(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Chrome Mobile'
  - regex: '(CriOS)/(\d+)\.(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Chrome Mobile iOS'
  - regex: '(Chrome)/(\d+)\.(\d+)\.(\d+)\.(\d+) Mobile'
    family_replacement: 'Chrome Mobile'

  # Chrome Frame must come before MSIE.
  - regex: '(chromeframe)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Chrome Frame'

  # UC Browser
  - regex: '(UCBrowser)[ /](\d+)\.(\d+)\.(\d+)'
    family_replacement: 'UC Browser'
  - regex: '(UC Browser)[ /](\d+)\.(\d+)\.(\d+)'
  - regex: '(UC Browser|UCBrowser|UCWEB)(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'UC Browser'

  # Tizen Browser (second case included in browser/major.minor regex)
  - regex: '(SLP Browser)/(\d+)\.(\d+)'
    family_replacement: 'Tizen Browser'

  # Sogou Explorer 2.X
  - regex: '(SE 2\.X) MetaSr (\d+)\.(\d+)'
    family_replacement: 'Sogou Explorer'

  # Baidu Browsers (desktop spoofs chrome & IE, explorer is mobile)
  - regex: '(baidubrowser)[/\s](\d+)'
    family_replacement: 'Baidu Browser'
  - regex: '(FlyFlow)/(\d+)\.(\d+)'
    family_replacement: 'Baidu Explorer'

  # Pingdom
  - regex: '(Pingdom.com_bot_version_)(\d+)\.(\d+)'
    family_replacement: 'PingdomBot'

  # Facebook
  - regex: '(facebookexternalhit)/(\d+)\.(\d+)'
    family_replacement: 'FacebookBot'

  # Twitterbot
  - regex: '(Twitterbot)/(\d+)\.(\d+)'
    family_replacement: 'TwitterBot'

  # Rackspace Monitoring
  - regex: '(Rackspace Monitoring)/(\d+)\.(\d+)'
    family_replacement: 'RackspaceBot'

  # PyAMF
  - regex: '(PyAMF)/(\d+)\.(\d+)\.(\d+)'

  # Yandex Browser
  - regex: '(YaBrowser)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Yandex Browser'

  # Mail.ru Amigo/Internet Browser (Chromium-based)
  - regex: '(Chrome)/(\d+)\.(\d+)\.(\d+).* MRCHROME'
    family_replacement: 'Mail.ru Chromium Browser'

  # AOL Browser (IE-based)
  - regex: '(AOL) (\d+)\.(\d+); AOLBuild (\d+)'

  #### END SPECIAL CASES TOP ####

  #### MAIN CASES - this catches > 50% of all browsers ####

  # Browser/major_version.minor_version.beta_version
  - regex: '(AdobeAIR|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Epiphany|Shiira|Sunrise|Flock|Netscape|Lunascape|WebPilot|Vodafone|NetFront|Netfront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iris|UP\.Browser|Bunjalloo|Google Earth|Raven for Mac|Openwave)/(\d+)\.(\d+)\.(\d+)'

  # Chrome/Chromium/major_version.minor_version.beta_version
  - regex: '(Chromium|Chrome)/(\d+)\.(\d+)\.(\d+)'

  # Browser/major_version.minor_version
  - regex: '(Bolt|Jasmine|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Chrome|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|Vodafone|NetFront|Netfront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|NetNewsWire|Space Bison|Stainless|Orca|Dolfin|BOLT|Minimo|Tizen Browser|Polaris|Abrowser|Planetweb|ICE Browser)/(\d+)\.(\d+)'

  # Chrome/Chromium/major_version.minor_version
  - regex: '(Chromium|Chrome)/(\d+)\.(\d+)'

  # Browser major_version.minor_version.beta_version (space instead of slash)
  - regex: '(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (\d+)\.(\d+)\.(\d+)'
  # Browser major_version.minor_version (space instead of slash)
  - regex: '(iCab|Lunascape|Opera|Android|Jasmine|Polaris) (\d+)\.(\d+)\.?(\d+)?'
  
  # Kindle WebKit
  - regex: '(Kindle)/(\d+)\.(\d+)'
  
  # weird android UAs
  - regex: '(Android) Donut'
    v1_replacement: '1'
    v2_replacement: '2'

  - regex: '(Android) Eclair'
    v1_replacement: '2'
    v2_replacement: '1'

  - regex: '(Android) Froyo'
    v1_replacement: '2'
    v2_replacement: '2'

  - regex: '(Android) Gingerbread'
    v1_replacement: '2'
    v2_replacement: '3'

  - regex: '(Android) Honeycomb'
    v1_replacement: '3'

  # IE Mobile
  - regex: '(IEMobile)[ /](\d+)\.(\d+)'
    family_replacement: 'IE Mobile'
  # desktop mode
  # http://www.anandtech.com/show/3982/windows-phone-7-review
  - regex: '(MSIE) (\d+)\.(\d+).*XBLWP7'
    family_replacement: 'IE Large Screen'

  # AFTER THE EDGE CASES ABOVE!
  - regex: '(Firefox)/(\d+)\.(\d+)\.(\d+)'
  - regex: '(Firefox)/(\d+)\.(\d+)(pre|[ab]\d+[a-z]*)?'

  #### END MAIN CASES ####

  #### SPECIAL CASES ####
  - regex: '(Obigo)InternetBrowser'
  - regex: '(Obigo)\-Browser'
  - regex: '(Obigo|OBIGO)[^\d]*(\d+)(?:.(\d+))?'
    family_replacement: 'Obigo'

  - regex: '(MAXTHON|Maxthon) (\d+)\.(\d+)'
    family_replacement: 'Maxthon'
  - regex: '(Maxthon|MyIE2|Uzbl|Shiira)'
    v1_replacement: '0'

  - regex: 'PLAYSTATION 3.+WebKit'
    family_replacement: 'NetFront NX'
  - regex: 'PLAYSTATION 3'
    family_replacement: 'NetFront'
  - regex: '(PlayStation Portable)'
    family_replacement: 'NetFront'
  - regex: '(PlayStation Vita)'
    family_replacement: 'NetFront NX'
  
  - regex: 'AppleWebKit.+ (NX)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'NetFront NX'
  - regex: '(Nintendo 3DS)'
    family_replacement: 'NetFront NX'

  - regex: '(BrowseX) \((\d+)\.(\d+)\.(\d+)'

  - regex: '(NCSA_Mosaic)/(\d+)\.(\d+)'
    family_replacement: 'NCSA Mosaic'

  # Polaris/d.d is above
  - regex: '(POLARIS)/(\d+)\.(\d+)'
    family_replacement: 'Polaris'
  - regex: '(Embider)/(\d+)\.(\d+)'
    family_replacement: 'Polaris'

  - regex: '(BonEcho)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Bon Echo'

  - regex: 'M?QQBrowser'
    family_replacement: 'QQ Browser'

  - regex: '(iPod).+Version/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Mobile Safari'
  - regex: '(iPod).*Version/(\d+)\.(\d+)'
    family_replacement: 'Mobile Safari'
  - regex: '(iPhone).*Version/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Mobile Safari'
  - regex: '(iPhone).*Version/(\d+)\.(\d+)'
    family_replacement: 'Mobile Safari'
  - regex: '(iPad).*Version/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Mobile Safari'
  - regex: '(iPad).*Version/(\d+)\.(\d+)'
    family_replacement: 'Mobile Safari'
  - regex: '(iPod|iPhone|iPad);.*CPU.*OS (\d+)(?:_\d+)?_(\d+).*Mobile'
    family_replacement: 'Mobile Safari'
  - regex: '(iPod|iPhone|iPad)'
    family_replacement: 'Mobile Safari'

  - regex: '(AvantGo) (\d+).(\d+)'
  
  - regex: '(OneBrowser)/(\d+).(\d+)'
    family_replacement: 'ONE Browser'

  - regex: '(Avant)'
    v1_replacement: '1'

  # This is the Tesla Model S (see similar entry in device parsers)
  - regex: '(QtCarBrowser)'
    v1_replacement: '1'

  - regex: '(iBrowser/Mini)(\d+).(\d+)'
    family_replacement: 'iBrowser Mini'
  # nokia browsers
  # based on: http://www.developer.nokia.com/Community/Wiki/User-Agent_headers_for_Nokia_devices
  - regex: '^(Nokia)'
    family_replacement: 'Nokia Services (WAP) Browser'
  - regex: '(NokiaBrowser)/(\d+)\.(\d+).(\d+)\.(\d+)'
    family_replacement: 'Nokia Browser'
  - regex: '(NokiaBrowser)/(\d+)\.(\d+).(\d+)'
    family_replacement: 'Nokia Browser'
  - regex: '(NokiaBrowser)/(\d+)\.(\d+)'
    family_replacement: 'Nokia Browser'
  - regex: '(BrowserNG)/(\d+)\.(\d+).(\d+)'
    family_replacement: 'Nokia Browser'
  - regex: '(Series60)/5\.0'
    family_replacement: 'Nokia Browser'
    v1_replacement: '7'
    v2_replacement: '0'
  - regex: '(Series60)/(\d+)\.(\d+)'
    family_replacement: 'Nokia OSS Browser'
  - regex: '(S40OviBrowser)/(\d+)\.(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Ovi Browser'
  - regex: '(Nokia)[EN]?(\d+)'

  # BlackBerry devices
  - regex: '(BB10);'
    family_replacement: 'BlackBerry WebKit'
  - regex: '(PlayBook).+RIM Tablet OS (\d+)\.(\d+)\.(\d+)'
    family_replacement: 'BlackBerry WebKit'
  - regex: '(Black[bB]erry).+Version/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'BlackBerry WebKit'
  - regex: '(Black[bB]erry)\s?(\d+)'
    family_replacement: 'BlackBerry'

  - regex: '(OmniWeb)/v(\d+)\.(\d+)'

  - regex: '(Blazer)/(\d+)\.(\d+)'
    family_replacement: 'Palm Blazer'

  - regex: '(Pre)/(\d+)\.(\d+)'
    family_replacement: 'Palm Pre'

  # fork of Links
  - regex: '(ELinks)/(\d+)\.(\d+)'
  - regex: '(ELinks) \((\d+)\.(\d+)'
  - regex: '(Links) \((\d+)\.(\d+)'

  - regex: '(QtWeb) Internet Browser/(\d+)\.(\d+)'

  #- regex: '\(iPad;.+(Version)/(\d+)\.(\d+)(?:\.(\d+))?.*Safari/'
  #  family_replacement: 'iPad'

  # Amazon Silk, should go before Safari
  - regex: '(Silk)/(\d+)\.(\d+)(?:\.([0-9\-]+))?'
    family_replacement: 'Amazon Silk'

  # Phantomjs, should go before Safari
  - regex: '(PhantomJS)/(\d+)\.(\d+)\.(\d+)'

  # WebKit Nightly
  - regex: '(AppleWebKit)/(\d+)\.?(\d+)?\+ .* Safari'
    family_replacement: 'WebKit Nightly'

  # Safari
  - regex: '(Version)/(\d+)\.(\d+)(?:\.(\d+))?.*Safari/'
    family_replacement: 'Safari'
  # Safari didn't provide "Version/d.d.d" prior to 3.0
  - regex: '(Safari)/\d+'

  - regex: '(OLPC)/Update(\d+)\.(\d+)'

  - regex: '(OLPC)/Update()\.(\d+)'
    v1_replacement: '0'

  - regex: '(SEMC\-Browser)/(\d+)\.(\d+)'

  - regex: '(Teleca)'
    family_replacement: 'Teleca Browser'
    
  - regex: '(Phantom)/V(\d+)\.(\d+)'
    family_replacement: 'Phantom Browser'

  - regex: '([MS]?IE) (\d+)\.(\d+)'
    family_replacement: 'IE'

  - regex: 'Trident(.*)rv.(\d+)\.(\d+)'
    family_replacement: 'IE'

  - regex: '(python-requests)/(\d+)\.(\d+)'
    family_replacement: 'Python Requests'

os_parsers:

  ##########
  # Android
  # can actually detect rooted android os. do we care?
  ##########
  - regex: '(Android) (\d+)\.(\d+)(?:[.\-]([a-z0-9]+))?'
  - regex: '(Android)\-(\d+)\.(\d+)(?:[.\-]([a-z0-9]+))?'

  - regex: '(Android) Donut'
    os_v1_replacement: '1'
    os_v2_replacement: '2'

  - regex: '(Android) Eclair'
    os_v1_replacement: '2'
    os_v2_replacement: '1'

  - regex: '(Android) Froyo'
    os_v1_replacement: '2'
    os_v2_replacement: '2'

  - regex: '(Android) Gingerbread'
    os_v1_replacement: '2'
    os_v2_replacement: '3'

  - regex: '(Android) Honeycomb'
    os_v1_replacement: '3'

  ##########
  # Kindle Android
  ##########
  - regex: '(Silk-Accelerated=[a-z]{4,5})'
    os_replacement: 'Android'

  ##########
  # Windows
  # http://en.wikipedia.org/wiki/Windows_NT#Releases
  # possibility of false positive when different marketing names share same NT kernel
  # e.g. windows server 2003 and windows xp
  # lots of ua strings have Windows NT 4.1 !?!?!?!? !?!? !? !????!?! !!! ??? !?!?! ?
  # (very) roughly ordered in terms of frequency of occurence of regex (win xp currently most frequent, etc)
  ##########
  
  - regex: '(Windows (?:NT 5\.2|NT 5\.1))'
    os_replacement: 'Windows XP'

  # ie mobile des ktop mode
  # spoofs nt 6.1. must come before windows 7
  - regex: '(XBLWP7)'
    os_replacement: 'Windows Phone'

  - regex: '(Windows NT 6\.1)'
    os_replacement: 'Windows 7'

  - regex: '(Windows NT 6\.0)'
    os_replacement: 'Windows Vista'

  - regex: '(Win 9x 4\.90)'
    os_replacement: 'Windows Me'

  - regex: '(Windows 98|Windows XP|Windows ME|Windows 95|Windows CE|Windows 7|Windows NT 4\.0|Windows Vista|Windows 2000|Windows 3.1)'

  - regex: '(Windows NT 6\.2; ARM;)'
    os_replacement: 'Windows RT'

  # is this a spoof or is nt 6.2 out and about in some capacity?
  - regex: '(Windows NT 6\.2)'
    os_replacement: 'Windows 8'

  - regex: '(Windows NT 5\.0)'
    os_replacement: 'Windows 2000'

  - regex: '(Windows Phone) (\d+)\.(\d+)'
  - regex: '(Windows Phone) OS (\d+)\.(\d+)'
  - regex: '(Windows ?Mobile)'
    os_replacement: 'Windows Mobile'

  - regex: '(WinNT4.0)'
    os_replacement: 'Windows NT 4.0'

  - regex: '(Win98)'
    os_replacement: 'Windows 98'

  ##########
  # Tizen OS from Samsung
  # spoofs Android so pushing it above
  ##########
  - regex: '(Tizen)/(\d+)\.(\d+)'

  ##########
  # Mac OS
  # http://en.wikipedia.org/wiki/Mac_OS_X#Versions
  ##########
  - regex: '(Mac OS X) (\d+)[_.](\d+)(?:[_.](\d+))?'
  
  # IE on Mac doesn't specify version number
  - regex: 'Mac_PowerPC'
    os_replacement: 'Mac OS'

  # builds before tiger don't seem to specify version?

  # ios devices spoof (mac os x), so including intel/ppc prefixes
  - regex: '(?:PPC|Intel) (Mac OS X)'

  ##########
  # iOS
  # http://en.wikipedia.org/wiki/IOS_version_history
  ##########
  - regex: '(CPU OS|iPhone OS) (\d+)_(\d+)(?:_(\d+))?'
    os_replacement: 'iOS'

  # remaining cases are mostly only opera uas, so catch opera as to not catch iphone spoofs
  - regex: '(iPhone|iPad|iPod); Opera'
    os_replacement: 'iOS'

  # few more stragglers
  - regex: '(iPhone|iPad|iPod).*Mac OS X.*Version/(\d+)\.(\d+)'
    os_replacement: 'iOS'

  - regex: '(AppleTV)/(\d+)\.(\d+)'
    os_replacement: 'ATV OS X'

  ##########
  # Chrome OS
  # if version 0.0.0, probably this stuff:
  # http://code.google.com/p/chromium-os/issues/detail?id=11573
  # http://code.google.com/p/chromium-os/issues/detail?id=13790
  ##########
  - regex: '(CrOS) [a-z0-9_]+ (\d+)\.(\d+)(?:\.(\d+))?'
    os_replacement: 'Chrome OS'

  ##########
  # Linux distros
  ##########
  - regex: '([Dd]ebian)'
    os_replacement: 'Debian'
  - regex: '(Linux Mint)(?:/(\d+))?'
  - regex: '(Mandriva)(?: Linux)?/(?:[\d.-]+m[a-z]{2}(\d+).(\d))?'

  ##########
  # Symbian + Symbian OS
  # http://en.wikipedia.org/wiki/History_of_Symbian
  ##########
  - regex: '(Symbian[Oo][Ss])/(\d+)\.(\d+)'
    os_replacement: 'Symbian OS'
  - regex: '(Symbian/3).+NokiaBrowser/7\.3'
    os_replacement: 'Symbian^3 Anna'
  - regex: '(Symbian/3).+NokiaBrowser/7\.4'
    os_replacement: 'Symbian^3 Belle'
  - regex: '(Symbian/3)'
    os_replacement: 'Symbian^3'
  - regex: '(Series 60|SymbOS|S60)'
    os_replacement: 'Symbian OS'
  - regex: '(MeeGo)'
  - regex: 'Symbian [Oo][Ss]'
    os_replacement: 'Symbian OS'
  - regex: 'Series40;'
    os_replacement: 'Nokia Series 40'

  ##########
  # BlackBerry devices
  ##########
  - regex: '(BB10);.+Version/(\d+)\.(\d+)\.(\d+)'
    os_replacement: 'BlackBerry OS'
  - regex: '(Black[Bb]erry)[0-9a-z]+/(\d+)\.(\d+)\.(\d+)(?:\.(\d+))?'
    os_replacement: 'BlackBerry OS'
  - regex: '(Black[Bb]erry).+Version/(\d+)\.(\d+)\.(\d+)(?:\.(\d+))?'
    os_replacement: 'BlackBerry OS'
  - regex: '(RIM Tablet OS) (\d+)\.(\d+)\.(\d+)'
    os_replacement: 'BlackBerry Tablet OS'
  - regex: '(Play[Bb]ook)'
    os_replacement: 'BlackBerry Tablet OS'
  - regex: '(Black[Bb]erry)'
    os_replacement: 'BlackBerry OS'

  ##########
  # Firefox OS
  ##########
  - regex: '\(Mobile;.+Firefox/\d+\.\d+'
    os_replacement: 'Firefox OS'

  ##########
  # BREW
  # yes, Brew is lower-cased for Brew MP
  ##########
  - regex: '(BREW)[ /](\d+)\.(\d+)\.(\d+)'
  - regex: '(BREW);'
  - regex: '(Brew MP|BMP)[ /](\d+)\.(\d+)\.(\d+)'
    os_replacement: 'Brew MP'
  - regex: 'BMP;'
    os_replacement: 'Brew MP'

  ##########
  # Google TV
  ##########
  - regex: '(GoogleTV) (\d+)\.(\d+)\.(\d+)'
  # Old style
  - regex: '(GoogleTV)/[\da-z]+'

  - regex: '(WebTV)/(\d+).(\d+)'
  
  ##########
  # Misc mobile
  ##########
  - regex: '(hpw|web)OS/(\d+)\.(\d+)(?:\.(\d+))?'
    os_replacement: 'webOS'
  - regex: '(VRE);'

  ##########
  # Generic patterns
  # since the majority of os cases are very specific, these go last
  ##########
  # first.second.third.fourth bits
  - regex: '(Fedora|Red Hat|PCLinuxOS)/(\d+)\.(\d+)\.(\d+)\.(\d+)'

  # first.second.third bits
  - regex: '(Red Hat|Puppy|PCLinuxOS)/(\d+)\.(\d+)\.(\d+)'

  # first.second bits
  - regex: '(Ubuntu|Kindle|Bada|Lubuntu|BackTrack|Red Hat|Slackware)/(\d+)\.(\d+)'

  # just os
  - regex: '(Windows|OpenBSD|FreeBSD|NetBSD|Android|WeTab)'
  - regex: '(Ubuntu|Kubuntu|Arch Linux|CentOS|Slackware|Gentoo|openSUSE|SUSE|Red Hat|Fedora|PCLinuxOS|Gentoo|Mageia)'
  - regex: '(Linux)/(\d+)\.(\d+)'
  - regex: '(Linux|BSD)'
  - regex: 'SunOS'
    os_replacement: 'Solaris'

device_parsers:
  ##########
  # incomplete!
  # multiple replacement placeholds i.e. ($1) ($2) help solve problem of single device with multiple representations in ua
  # e.g. HTC Dream S should parse to the same device as HTC_DreamS
  ##########

  ##########
  # incomplete!
  # HTC
  # http://en.wikipedia.org/wiki/List_of_HTC_phones
  # this is quickly getting unwieldy
  ##########
  # example: Mozilla/5.0 (Linux; U; Android 2.3.2; fr-fr; HTC HD2 Build/FRF91) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1
  - regex: 'HTC ([A-Z][a-z0-9]+) Build'
    device_replacement: 'HTC $1'
  # example: Mozilla/5.0 (Linux; U; Android 2.1; es-es; HTC Legend 1.23.161.1 Build/ERD79) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Mobile Safari/530.17,gzip
  - regex: 'HTC ([A-Z][a-z0-9 ]+) \d+\.\d+\.\d+\.\d+'
    device_replacement: 'HTC $1'
  # example: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; HTC_Touch_Diamond2_T5353; Windows Phone 6.5.3.5)
  - regex: 'HTC_Touch_([A-Za-z0-9]+)'
    device_replacement: 'HTC Touch ($1)'
  # should come after HTC_Touch
  - regex: 'USCCHTC(\d+)'
    device_replacement: 'HTC $1 (US Cellular)'
  - regex: 'Sprint APA(9292)'
    device_replacement: 'HTC $1 (Sprint)'
  - regex: 'HTC ([A-Za-z0-9]+ [A-Z])'
    device_replacement: 'HTC $1'
  - regex: 'HTC[-_/\s]([A-Za-z0-9]+)'
    device_replacement: 'HTC $1'
  - regex: '(ADR[A-Za-z0-9]+)'
    device_replacement: 'HTC $1'
  - regex: '(HTC)'

  # Tesla Model S
  - regex: '(QtCarBrowser)'
    device_replacement: 'Tesla Model S'

  # Samsung
  - regex: '(SamsungSGHi560)'
    device_replacement: 'Samsung SGHi560'

  #########
  # Ericsson - must come before nokia since they also use symbian
  #########
  - regex: 'SonyEricsson([A-Za-z0-9]+)/'
    device_replacement: 'Ericsson $1'

  ##########
  # PlayStation
  # The Vita spoofs the Kindle
  ##########
  - regex: 'PLAYSTATION 3'
    device_replacement: 'PlayStation 3'
  - regex: '(PlayStation Portable)'
  - regex: '(PlayStation Vita)'

  ##########
  # incomplete!
  # Kindle
  # http://amazonsilk.wordpress.com/useful-bits/silk-user-agent/
  ##########
  - regex: '(KFOT Build)'
    device_replacement: 'Kindle Fire'
  - regex: '(KFTT Build)'
    device_replacement: 'Kindle Fire HD'
  - regex: '(KFJWI Build)'
    device_replacement: 'Kindle Fire HD 8.9" WiFi'
  - regex: '(KFJWA Build)'
    device_replacement: 'Kindle Fire HD 8.9" 4G'
  - regex: '(Kindle Fire)'
  - regex: '(Kindle)'
  - regex: '(Silk)/(\d+)\.(\d+)(?:\.([0-9\-]+))?'
    device_replacement: 'Kindle Fire'
      
  #########
  # Android General Device Matching (far from perfect)
  #########
  - regex: 'Android[\- ][\d]+\.[\d]+; [A-Za-z]{2}\-[A-Za-z]{2}; WOWMobile (.+) Build'
  - regex: 'Android[\- ][\d]+\.[\d]+\-update1; [A-Za-z]{2}\-[A-Za-z]{2}; (.+) Build'
  - regex: 'Android[\- ][\d]+\.[\d]+\.[\d]+; [A-Za-z]{2}\-[A-Za-z]{2}; (.+) Build'
  - regex: 'Android[\- ][\d]+\.[\d]+\.[\d]+;[A-Za-z]{2}\-[A-Za-z]{2};(.+) Build'
  - regex: 'Android[\- ][\d]+\.[\d]+; [A-Za-z]{2}\-[A-Za-z]{2}; (.+) Build'
  - regex: 'Android[\- ][\d]+\.[\d]+\.[\d]+; (.+) Build'
  - regex: 'Android[\- ][\d]+\.[\d]+; (.+) Build'

  ##########
  # NOKIA
  # nokia NokiaN8-00 comes before iphone. sometimes spoofs iphone
  ##########
  - regex: 'NokiaN([0-9]+)'
    device_replacement: 'Nokia N$1'
  - regex: 'NOKIA([A-Za-z0-9\v-]+)'
    device_replacement: 'Nokia $1'
  - regex: 'Nokia([A-Za-z0-9\v-]+)'
    device_replacement: 'Nokia $1'
  - regex: 'NOKIA ([A-Za-z0-9\-]+)'
    device_replacement: 'Nokia $1'
  - regex: 'Nokia ([A-Za-z0-9\-]+)'
    device_replacement: 'Nokia $1'
  - regex: 'Lumia ([A-Za-z0-9\-]+)'
    device_replacement: 'Lumia $1'
  - regex: 'Symbian'
    device_replacement: 'Nokia'

  ##########
  # BlackBerry
  # http://www.useragentstring.com/pages/BlackBerry/
  ##########
  - regex: 'BB10; ([A-Za-z0-9\- ]+)\)'
    device_replacement: 'BlackBerry $1'
  - regex: '(PlayBook).+RIM Tablet OS'
    device_replacement: 'BlackBerry Playbook'
  - regex: 'Black[Bb]erry ([0-9]+);'
    device_replacement: 'BlackBerry $1'
  - regex: 'Black[Bb]erry([0-9]+)'
    device_replacement: 'BlackBerry $1'
  - regex: 'Black[Bb]erry;'
    device_replacement: 'BlackBerry'

  ##########
  # PALM / HP
  ##########
  # some palm devices must come before iphone. sometimes spoofs iphone in ua
  - regex: '(Pre)/(\d+)\.(\d+)'
    device_replacement: 'Palm Pre'
  - regex: '(Pixi)/(\d+)\.(\d+)'
    device_replacement: 'Palm Pixi'
  - regex: '(Touch[Pp]ad)/(\d+)\.(\d+)'
    device_replacement: 'HP TouchPad'
  - regex: 'HPiPAQ([A-Za-z0-9]+)/(\d+).(\d+)'
    device_replacement: 'HP iPAQ $1'
  - regex: 'Palm([A-Za-z0-9]+)'
    device_replacement: 'Palm $1'
  - regex: 'Treo([A-Za-z0-9]+)'
    device_replacement: 'Palm Treo $1'
  - regex: 'webOS.*(P160UNA)/(\d+).(\d+)'
    device_replacement: 'HP Veer'

  ##########
  # AppleTV
  # No built in browser that I can tell
  # Stack Overflow indicated iTunes-AppleTV/4.1 as a known UA for app available and I'm seeing it in live traffic
  ##########
  - regex: '(AppleTV)'
    device_replacement: 'AppleTV'

  ##########
  # Catch the google mobile crawler before checking for iPhones.
  ##########

  - regex: 'AdsBot-Google-Mobile'
    device_replacement: 'Spider'
   
  - regex: 'Googlebot-Mobile/(\d+).(\d+)'
    device_replacement: 'Spider'
    
  ##########
  # complete but probably catches spoofs
  # iSTUFF
  ##########
  # ipad and ipod must be parsed before iphone
  # cannot determine specific device type from ua string. (3g, 3gs, 4, etc)
  - regex: '(iPad) Simulator;'
  - regex: '(iPad);'
  - regex: '(iPod) touch;'
  - regex: '(iPod);'
  - regex: '(iPhone) Simulator;'
  - regex: '(iPhone);'

  ##########
  # Acer
  ##########
  - regex: 'acer_([A-Za-z0-9]+)_'
    device_replacement: 'Acer $1'
  - regex: 'acer_([A-Za-z0-9]+)_'
    device_replacement: 'Acer $1'

  ##########   
  # Alcatel
  ##########
  - regex: 'ALCATEL-([A-Za-z0-9]+)'
    device_replacement: 'Alcatel $1'
  - regex: 'Alcatel-([A-Za-z0-9]+)'
    device_replacement: 'Alcatel $1'

  ##########
  # Amoi
  ##########
  - regex: 'Amoi\-([A-Za-z0-9]+)'
    device_replacement: 'Amoi $1'
  - regex: 'AMOI\-([A-Za-z0-9]+)'
    device_replacement: 'Amoi $1'

  ##########
  # Amoi
  ##########
  - regex: 'Asus\-([A-Za-z0-9]+)'
    device_replacement: 'Asus $1'
  - regex: 'ASUS\-([A-Za-z0-9]+)'
    device_replacement: 'Asus $1'

  ##########
  # Bird
  ##########
  - regex: 'BIRD\-([A-Za-z0-9]+)'
    device_replacement: 'Bird $1'
  - regex: 'BIRD\.([A-Za-z0-9]+)'
    device_replacement: 'Bird $1'
  - regex: 'BIRD ([A-Za-z0-9]+)'
    device_replacement: 'Bird $1'

  ##########
  # Dell
  ##########
  - regex: 'Dell ([A-Za-z0-9]+)'
    device_replacement: 'Dell $1'

  ##########
  # DoCoMo
  ##########
  - regex: 'DoCoMo/2\.0 ([A-Za-z0-9]+)'
    device_replacement: 'DoCoMo $1'
  - regex: '([A-Za-z0-9]+)_W\;FOMA'
    device_replacement: 'DoCoMo $1'
  - regex: '([A-Za-z0-9]+)\;FOMA'
    device_replacement: 'DoCoMo $1'

  ##########
  # Huawei
  ##########
  - regex: 'Huawei([A-Za-z0-9]+)'
    device_replacement: 'Huawei $1'
  - regex: 'HUAWEI-([A-Za-z0-9]+)'
    device_replacement: 'Huawei $1'
  - regex: 'vodafone([A-Za-z0-9]+)'
    device_replacement: 'Huawei Vodafone $1'

  ##########
  # i-mate
  ##########
  - regex: 'i\-mate ([A-Za-z0-9]+)'
    device_replacement: 'i-mate $1'

  ##########
  # kyocera
  ##########
  - regex: 'Kyocera\-([A-Za-z0-9]+)'
    device_replacement: 'Kyocera $1'
  - regex: 'KWC\-([A-Za-z0-9]+)'
    device_replacement: 'Kyocera $1'

  ##########
  # lenovo
  ##########
  - regex: 'Lenovo\-([A-Za-z0-9]+)'
    device_replacement: 'Lenovo $1'
  - regex: 'Lenovo_([A-Za-z0-9]+)'
    device_replacement: 'Lenovo $1'

  ##########
  # lg
  ##########
  - regex: 'LG/([A-Za-z0-9]+)'
    device_replacement: 'LG $1'
  - regex: 'LG-LG([A-Za-z0-9]+)'
    device_replacement: 'LG $1'
  - regex: 'LGE-LG([A-Za-z0-9]+)'
    device_replacement: 'LG $1'
  - regex: 'LGE VX([A-Za-z0-9]+)'
    device_replacement: 'LG $1'
  - regex: 'LG ([A-Za-z0-9]+)'
    device_replacement: 'LG $1'
  - regex: 'LGE LG\-AX([A-Za-z0-9]+)'
    device_replacement: 'LG $1'
  - regex: 'LG\-([A-Za-z0-9]+)'
    device_replacement: 'LG $1'
  - regex: 'LGE\-([A-Za-z0-9]+)'
    device_replacement: 'LG $1'
  - regex: 'LG([A-Za-z0-9]+)'
    device_replacement: 'LG $1'

  ##########
  # kin
  ##########
  - regex: '(KIN)\.One (\d+)\.(\d+)'
    device_replacement: 'Microsoft $1'
  - regex: '(KIN)\.Two (\d+)\.(\d+)'
    device_replacement: 'Microsoft $1'

  ##########
  # motorola
  ##########
  - regex: '(Motorola)\-([A-Za-z0-9]+)'
  - regex: 'MOTO\-([A-Za-z0-9]+)'
    device_replacement: 'Motorola $1'
  - regex: 'MOT\-([A-Za-z0-9]+)'
    device_replacement: 'Motorola $1'
    
  ##########
  # nintendo
  ##########
  - regex: '(Nintendo WiiU)'
    device_replacement: 'Nintendo Wii U'
  - regex: 'Nintendo (DS|3DS|DSi|Wii);'
    device_replacement: 'Nintendo $1'

  ##########
  # pantech
  ##########
  - regex: 'Pantech([A-Za-z0-9]+)'
    device_replacement: 'Pantech $1'
 
  ##########
  # philips
  ##########
  - regex: 'Philips([A-Za-z0-9]+)'
    device_replacement: 'Philips $1'
  - regex: 'Philips ([A-Za-z0-9]+)'
    device_replacement: 'Philips $1'

  ##########
  # Samsung
  ##########
  - regex: 'SAMSUNG-([A-Za-z0-9\-]+)'
    device_replacement: 'Samsung $1'
  - regex: 'SAMSUNG\; ([A-Za-z0-9\-]+)'
    device_replacement: 'Samsung $1'

  ##########
  # Sega
  ##########
  - regex: 'Dreamcast'
    device_replacement: 'Sega Dreamcast'

  ##########
  # Softbank
  ##########
  - regex: 'Softbank/1\.0/([A-Za-z0-9]+)'
    device_replacement: 'Softbank $1'
  - regex: 'Softbank/2\.0/([A-Za-z0-9]+)'
    device_replacement: 'Softbank $1'

  ##########
  # WebTV
  ##########
  - regex: '(WebTV)/(\d+).(\d+)'

  ##########
  # Generic Smart Phone
  ##########
  - regex: '(hiptop|avantgo|plucker|xiino|blazer|elaine|up.browser|up.link|mmp|smartphone|midp|wap|vodafone|o2|pocket|mobile|pda)'
    device_replacement: "Generic Smartphone"

  ##########
  # Generic Feature Phone
  ##########
  - regex: '^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\-|airn|alav|asus|attw|au\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bell|bird|bw\-n|bw\-u|beck|benq|bilb|blac|c55/|cdm\-|chtm|capi|comp|cond|craw|dall|dbte|dc\-s|dica|ds\-d|ds12|dait|devi|dmob|doco|dopo|el49|erk0|esl8|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\-|fly_|g\-mo|g1 u|g560|gf\-5|grun|gene|go.w|good|grad|hcit|hd\-m|hd\-p|hd\-t|hei\-|hp i|hpip|hs\-c|htc |htc\-|htca|htcg)'
    device_replacement: 'Generic Feature Phone'
  - regex: '^(htcp|htcs|htct|htc_|haie|hita|huaw|hutc|i\-20|i\-go|i\-ma|i230|iac|iac\-|iac/|ig01|im1k|inno|iris|jata|java|kddi|kgt|kgt/|kpt |kwc\-|klon|lexi|lg g|lg\-a|lg\-b|lg\-c|lg\-d|lg\-f|lg\-g|lg\-k|lg\-l|lg\-m|lg\-o|lg\-p|lg\-s|lg\-t|lg\-u|lg\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\-|lge/|lynx|leno|m1\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\-|nem\-|newg|neon)'
    device_replacement: 'Generic Feature Phone'
  - regex: '^(netf|noki|nzph|o2 x|o2\-x|opwv|owg1|opti|oran|ot\-s|p800|pand|pg\-1|pg\-2|pg\-3|pg\-6|pg\-8|pg\-c|pg13|phil|pn\-2|pt\-g|palm|pana|pire|pock|pose|psio|qa\-a|qc\-2|qc\-3|qc\-5|qc\-7|qc07|qc12|qc21|qc32|qc60|qci\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\-|scp\-|sdk/|se47|sec\-|sec0|sec1|semc|sgh\-|shar|sie\-|sk\-0|sl45|slid|smb3|smt5|sp01|sph\-|spv |spv\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\-mo|t218|t250|t600|t610|t618|tcl\-|tdg\-|telm|tim\-|ts70|tsm\-|tsm3|tsm5|tx\-9|tagt)'
    device_replacement: 'Generic Feature Phone'
  - regex: '^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vite|voda|vulc|w3c |w3c\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\-|your|zte\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\-|webc|whit|wmlb|xda\-|xda_)'
    device_replacement: 'Generic Feature Phone'

  ##########
  # Spiders (this is hack...)
  ##########
  - regex: '(bot|borg|google(^tv)|yahoo|slurp|msnbot|msrbot|openbot|archiver|netresearch|lycos|scooter|altavista|teoma|gigabot|baiduspider|blitzbot|oegp|charlotte|furlbot|http%20client|polybot|htdig|ichiro|mogimogi|larbin|pompos|scrubby|searchsight|seekbot|semanticdiscovery|silk|snappy|speedy|spider|voila|vortex|voyager|zao|zeal|fast\-webcrawler|converacrawler|dataparksearch|findlinks|crawler)'
    device_replacement: 'Spider'



platform_parsers:
  ##########
  # Spiders
  ##########


  - regex: 'AdsBot-Google-Mobile'
    device_replacement: 'Bot'

  - regex: 'Googlebot|DoCoMo|YandexBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|facebookexternalhit'
    device_category: 'Bot'

  - regex: 'Googlebot-Mobile|YahooSeeker/M1A1-R2D2'
    device_category: 'Bot'

  - regex: '(bot|borg|google(^tv)|yahoo|slurp|msnbot|msrbot|openbot|archiver|netresearch|lycos|scooter|altavista|teoma|gigabot|baiduspider|blitzbot|oegp|charlotte|furlbot|http%20client|polybot|htdig|ichiro|mogimogi|larbin|pompos|scrubby|searchsight|seekbot|semanticdiscovery|silk|snappy|speedy|spider|crawl|voila|vortex|voyager|zao|zeal|fast\-webcrawler|converacrawler|dataparksearch|findlinks|crawler)'
    device_category: 'Bot'

  ##########
  # Tablets
  ##########
  - regex: 'Tablet'
    device_category: 'Tablet'
  - regex: 'Desktop'
    device_category: 'Desktop'
    
    
  - regex: 'iPad|iPad.*Mobile'
    device_category: 'Tablet'
  - regex: '^.*Android.*Nexus(((?:(?!Mobile))|(?:(\s(7|10).+))).)*$'
    device_category: 'Tablet'
  - regex: 'SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925'
    device_category: 'Tablet'
  - regex: 'Kindle|Silk.*Accelerated|Android.*\b(KFTT|KFOTE)\b'
    device_category: 'Tablet'
  - regex: 'Windows NT [0-9.]+; ARM;'
    device_category: 'Tablet'
  - regex: 'Transformer|TF101|PadFone|ME301T|ME371MG'
    device_category: 'Tablet'
  - regex: 'PlayBook|RIM Tablet'
    device_category: 'Tablet'
  - regex: 'HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200'
    device_category: 'Tablet'
  - regex: 'xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617'
    device_category: 'Tablet'
  - regex: 'Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|LogicPD Zoom2'
    device_category: 'Tablet'
  - regex: 'Android.*; \b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71)\b'
    device_category: 'Tablet'
  - regex: 'Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO'
    device_category: 'Tablet'
  - regex: '\bL-06C|LG-V900|LG-V909\b'
    device_category: 'Tablet'
  - regex: 'Android.*\b(F-01D|F-05E|F-10D|M532|Q572)\b'
    device_category: 'Tablet'
  - regex: 'PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474'
    device_category: 'Tablet'
  - regex: 'IdeaTab|S2110|S6000|K3011|A3000|A1000|A2107|A2109|A1107'
    device_category: 'Tablet'
  - regex: 'Android.*(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468)'
    device_category: 'Tablet'
  - regex: 'Android.*\bOYO\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB'
    device_category: 'Tablet'
  - regex: 'AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT'
    device_category: 'Tablet'
  - regex: 'M702pro'
    device_category: 'Tablet'
  - regex: 'MegaFon V9|ZTE V9'
    device_category: 'Tablet'
  - regex: 'Android.*ARCHOS|\b101G9\b|\b80G9\b'
    device_category: 'Tablet'
  - regex: 'NOVO7|Novo7Aurora|Novo7Basic|NOVO7PALADIN'
    device_category: 'Tablet'
  - regex: 'Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT211|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201'
    device_category: 'Tablet'
  - regex: 'Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT'
    device_category: 'Tablet'
  - regex: 'MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010'
    device_category: 'Tablet'
  - regex: 'M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733'
    device_category: 'Tablet'
  - regex: 'Android.*(\bMID\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)'
    device_category: 'Tablet'
  - regex: 'Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A'
    device_category: 'Tablet'
  - regex: 'T-Hub2'
    device_category: 'Tablet'
  - regex: 'IQ310|Fly Vision'
    device_category: 'Tablet'
  - regex: 'bq.*(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant)'
    device_category: 'Tablet'
  - regex: 'MediaPad|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim'
    device_category: 'Tablet'
  - regex: '\bN-06D|\bN-08D'
    device_category: 'Tablet'
  - regex: 'Pantech.*P4100'
    device_category: 'Tablet'
  - regex: 'Broncho.*(N701|N708|N802|a710)'
    device_category: 'Tablet'
  - regex: 'TOUCHPAD.*[78910]|\bTOUCHTAB\b'
    device_category: 'Tablet'
  - regex: 'z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900'
    device_category: 'Tablet'
  - regex: 'TB07STA|TB10STA|TB07FTA|TB10FTA'
    device_category: 'Tablet'
  - regex: 'Android.*\bNabi'
    device_category: 'Tablet'
  - regex: 'Kobo Touch|\bK080\b|\bVox\b Build|\bArc\b Build'
    device_category: 'Tablet'
  - regex: 'DSlide.*\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\b'
    device_category: 'Tablet'
  - regex: 'NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE'
    device_category: 'Tablet'
  - regex: 'Playstation.*(Portable|Vita)'
    device_category: 'Tablet'
  - regex: 'Android.*\bG1\b'
    device_category: 'Tablet'
  - regex: 'Funbook|Micromax.*\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\b'
    device_category: 'Tablet'
  - regex: 'Android.*\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\b'
    device_category: 'Tablet'
  - regex: 'TX-A1301|TX-M9002|Q702'
    device_category: 'Tablet'
  - regex: 'Android.*\b97D\b|Tablet(?!.*PC)|ViewPad7|BNTV250A|MID-WCDMA|LogicPD Zoom2|\bA7EB\b|CatNova8|A1_07|CT704|CT1002|\bM721\b|hp-tablet|rk30sdk'
    device_category: 'Tablet'
  
  
  - regex: 'Android.*Mobile'
    device_category: 'Mobile'
  
  
  ##########
  # Mobile
  ##########
  
  
  - regex: 'ObigoInternetBrowser'
    device_category: 'Mobile'
  
  - regex: '\biPhone.*Mobile|\biPod'
    device_category: 'Mobile'
  - regex: 'BlackBerry|\bBB10\b|rim[0-9]+'
    device_category: 'Mobile'
  - regex: 'HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\bEVO\b'
    device_category: 'Mobile'
  - regex: 'Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile'
    device_category: 'Mobile'
  - regex: 'Dell.*Streak|Dell.*Aero|Dell.*Venue|DELL.*Venue Pro|Dell Flash|Dell Smoke|Dell Mini 3iX|XCD28|XCD35|\b001DL\b|\b101DL\b|\bGS01\b'
    device_category: 'Mobile'
  - regex: 'Motorola|\bDroid\b.*Build|DROIDX|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT909|XT910|XT912|XT928'
    device_category: 'Mobile'
  - regex: 'Samsung|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535'
    device_category: 'Mobile'
  - regex: '\bLG\b;|(LG|LG-)?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|T500)'
    device_category: 'Mobile'
  - regex: 'SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h'
    device_category: 'Mobile'
  - regex: 'Asus.*Galaxy'
    device_category: 'Mobile'
  - regex: 'Micromax.*\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\b'
    device_category: 'Mobile'
  - regex: 'Huawei([A-Za-z0-9]+)'
    device_category: 'Mobile'
  - regex: 'HUAWEI-([A-Za-z0-9]+)'
    device_category: 'Mobile'
  - regex: 'vodafone([A-Za-z0-9]+)'
    device_category: 'Mobile'
  - regex: 'PalmSource|Palm'
    device_category: 'Mobile'
  - regex: 'Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature'
    device_category: 'Mobile'
  - regex: 'PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790'
    device_category: 'Mobile'
  - regex: 'IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250'
    device_category: 'Mobile'
  - regex: '\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\b'
    device_category: 'Mobile'
  - regex: 'Tapatalk|PDA;|PPC;|SAGEM|mmp|pocket|psp|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|wap|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser|LG-P500'
    device_category: 'Mobile'

  - regex: 'Android'
    device_category: 'Tablet'
    
  - regex: 'Opera Mini'
    device_category: 'Mobile'

    
  - regex: 'ios.*320\*480'
    device_category: 'Mobile'
  - regex: 'ios.*640\*960'
    device_category: 'Mobile'
  - regex: 'ios.*640\*1136'
    device_category: 'Mobile'
  - regex: 'ios.*1024\*768'
    device_category: 'Tablet'
  - regex: 'ios.*2048\*1536 '
    device_category: 'Tablet'


  ##########
  # Desktop
  ##########
  
  - regex: 'windows|linux|os\s+[x9]|solaris|bsd'
    device_category: 'Desktop'
    
  - regex: 'Mac_PowerPC'
    device_category: 'Desktop'
    
    
  - regex: 'Mobile'
    device_category: 'Mobile'